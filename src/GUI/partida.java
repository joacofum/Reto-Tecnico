/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BD.Conexion;
import Clases.Categoria;
import Clases.Partida;
import Clases.Pregunta;
import Clases.Ronda;
import Clases.controladorJugador;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;
import javax.swing.AbstractButton;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author joaco
 */
public class partida extends javax.swing.JFrame {
private int nivel = 1;
private String respuestaCorrecta = "";
private Partida p;
private List<Ronda> rondas = new ArrayList<>();
private int puntaje = 0;

    /**
     * Creates new form partida
     */
    public partida() {
        initComponents();
        this.setResizable(false);
        setLocationRelativeTo(null);
        buttonGroup1.add(radioOpcion2);
        buttonGroup1.add(radioOpcion3);
        buttonGroup1.add(radioOpcion1);
        buttonGroup1.add(radioOpcion4);
        
        comenzarPartida();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRonda = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPregunta = new javax.swing.JTextArea();
        jCategoria = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        radioOpcion1 = new javax.swing.JRadioButton();
        radioOpcion2 = new javax.swing.JRadioButton();
        radioOpcion3 = new javax.swing.JRadioButton();
        radioOpcion4 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jRonda.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jButton1.setText("Confirmar respuesta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Pregunta: ");

        txtPregunta.setColumns(20);
        txtPregunta.setRows(5);
        jScrollPane1.setViewportView(txtPregunta);

        jCategoria.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        radioOpcion4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioOpcion4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioOpcion2)
                    .addComponent(radioOpcion1)
                    .addComponent(radioOpcion3)
                    .addComponent(radioOpcion4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(radioOpcion1)
                .addGap(18, 18, 18)
                .addComponent(radioOpcion2)
                .addGap(18, 18, 18)
                .addComponent(radioOpcion3)
                .addGap(18, 18, 18)
                .addComponent(radioOpcion4)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 184, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jRonda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(194, 194, 194))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1)))
                        .addGap(86, 86, 86))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRonda, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioOpcion4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioOpcion4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioOpcion4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String respuestaSeleccionada = obtenerValorBotonSeleccionado();
        if(respuestaSeleccionada == null){
            //Mensaje de error
            JOptionPane.showMessageDialog(this, "Debe seleccionar una de las opciones", "Error", JOptionPane.WARNING_MESSAGE);       
        }else{
            //Chequear si es correcta.
            if(respuestaSeleccionada.equals(respuestaCorrecta)){
                //Alerta de exito...
                final ImageIcon icon = new ImageIcon("src/img/accept.png");
                JOptionPane.showMessageDialog(this, "Ha ingresado la opción correcta", "Éxito", JOptionPane.INFORMATION_MESSAGE, icon);
                
                //Aumentar nivel
                nivel += 1;
                
                //Deselecciono los radiobuttons...
                buttonGroup1.clearSelection();
                
                //Aumento el puntaje de la partida
                p.setPuntajeFinal(puntaje);                
                
                //Crear otra ronda
                if(nivel <= 5){
                    crearRondaObtenerCategoriaYPreguntaRandom();
                }else{
                    //Alerta de que ya completó el juego con el máximo puntaje.
                    final ImageIcon icon2 = new ImageIcon("src/img/winner.png");
                    JOptionPane.showMessageDialog(this, "¡Felicitaciones! Ha completado del desafío con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE, icon2);
                    this.dispose();
                }       
            }else{
                //Mostrar alerta de que falló...
                final ImageIcon icon3 = new ImageIcon("src/img/loser.png");
                JOptionPane.showMessageDialog(this, "¡Oh no! Elegiste la opción incorrecta. ¡Más suerte para la próxima!", "Perdiste", JOptionPane.ERROR_MESSAGE, icon3);
                //Aumento el puntaje de la partida
                Conexion.getInstance().merge(p);
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int resp = JOptionPane.showConfirmDialog(this, "Está seguro de que desea salir?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (resp == 0) {
            Conexion.getInstance().merge(p);
            this.dispose();
        } 
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(partida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(partida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(partida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(partida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new partida().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jCategoria;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jRonda;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioOpcion1;
    private javax.swing.JRadioButton radioOpcion2;
    private javax.swing.JRadioButton radioOpcion3;
    private javax.swing.JRadioButton radioOpcion4;
    private javax.swing.JTextArea txtPregunta;
    // End of variables declaration//GEN-END:variables

    private void comenzarPartida() {
        //1 - Crear partida
        //2 - Crear ronda       
            //2.1 - Nivel va a depender de la ronda.
        //3 - Obtener una categoría random.
        //4- Con esa categoría seleccionar la pregunta y respuesta random.
        //5 - Si contesta bien repetir paso 2, 3 y 4 hasta llegar al nivel máximo.
        p = new Partida();
        p.setJugador(controladorJugador.getJ());
        Date date = new Date();
        p.setFecha(date);        
        
        boolean exito = Conexion.getInstance().persist(p);
        if(exito){
          crearRondaObtenerCategoriaYPreguntaRandom();
        }
    }
    
    
    private Pregunta obtenerPregunta(int nivel, String nombre){
        Pregunta preg = Conexion.getInstance().obtenerPreguntaRandom(nivel, nombre);
        respuestaCorrecta = preg.obtenerRespuestaCorrecta(preg.getRespuestas());
        return preg;
    }
    
    private String obtenerValorBotonSeleccionado() {
        for (Enumeration<AbstractButton> buttons = buttonGroup1.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }
    
    private void crearRondaObtenerCategoriaYPreguntaRandom(){
        //Creo ronda
        Ronda r = new Ronda();
        
        //Obtengo una categoría
        Categoria c = Conexion.getInstance().obtenerCategoriaRandom();
        
        //Seteo la categoría a la ronda
        r.setCategoria(c);
        
        //Obtengo pregunta
        Pregunta preg = obtenerPregunta(nivel, c.getNombre());                    
        rondas.add(r);

        //Seteo la ronda a la partida...
        p.setRondas(rondas);
        
        //Obtengo el puntaje de la pregunta...
        puntaje = puntaje + preg.getPuntos();

        boolean exito2 = Conexion.getInstance().mergebool(p);
        if(exito2){
            jRonda.setText("Ronda " + nivel);
            jCategoria.setText(c.getNombre());
            txtPregunta.setText(preg.getDescripcion());              
            List<String> respuestas = preg.getRespuestasRandomOrder();
            radioOpcion1.setText(respuestas.get(0));
            radioOpcion2.setText(respuestas.get(1));
            radioOpcion3.setText(respuestas.get(2));
            radioOpcion4.setText(respuestas.get(3));
        }

    }
   
}
